##############################################################################
## Example config for fat_sat crate for AVS (Bifrost)
## Test St√∂gra stepper and posital SSI encoder.
## Added plc for output trigget at certain position
##
##
## Note: trigg position needs to be different than overflow value.
##

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg master

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=6.2.2,stream_VER=2.8.10, EC_RATE=500"

##############################################################################
## Configure hardware:

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "0")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EK1100"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "1")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL1004"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "2")
epicsEnvSet("ECMC_EC_SLAVE_NUM_DIG_OUT",        "$(ECMC_EC_SLAVE_NUM)")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL2819"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "3")
epicsEnvSet("ECMC_EC_SLAVE_NUM_SSI_ENC",      "$(ECMC_EC_SLAVE_NUM)")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL5002"

# Load local config for posital ssi encoder
epicsEnvSet("ECMC_EC_SDO_INDEX"   "0x8000")
${SCRIPTEXEC} ./sensors/ecmcEL5002-Encoder-Posital-OCD-S101G-1416-S060-PRL.cmd
epicsEnvUnset("ECMC_EC_SDO_INDEX")

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "4")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL5021"

# Enable reset on c-latch (index track)
ecmcConfigOrDie "Cfg.EcAddSdo($(ECMC_EC_SLAVE_NUM),0x8000,0x1,1,1)"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "5")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL7201"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "6")
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "$(ECMC_EC_SLAVE_NUM)")

# Several current settings are available for this motor (2A..17A). Motor max current is 12A RMS
# NOTE: Setting 12A results in approx 10A RMS current (measured with current clamps and scope)
epicsEnvSet("ECMC_EC_DRIVE_CURRENT",          "5")     # Set current in Amps here (only integers)
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=iPOS8020BX, CONFIG=-Motor-Stoegra-SM107-3-18M12-Parallel-${ECMC_EC_DRIVE_CURRENT}A"

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

##############################################################################
############ Set outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_1,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_2,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_3,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_4,1)"

##############################################################################
## AXIS 1
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/ipos8020_1.ax)

##############################################################################
## PLC 0: Trigger (set output) at certain position (if position passes IOC_TEST:Set-TriggPos1-RB.VAL then ec0.s2.BO_8 is high for 1 second)
## use caput IOC_TEST:Set-TriggPos1-RB <value> to set position of trigger
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=2,FILE=./plc/trigg.plc, PLC_MACROS='DBG=0,PLC_ID=0,EC_TRIGG_OUT=ec0.s${ECMC_EC_SLAVE_NUM_DIG_OUT}.BO_8,EC_POS=ec0.s${ECMC_EC_SLAVE_NUM_SSI_ENC}.CH1_VALUE,ENCODER_BITS=30'")
dbLoadRecords("ecmcPlcAnalog.db","P=$(IOC):,PORT=MC_CPU1,ASYN_NAME=plcs.plc0.static.triggPos1,REC_NAME=-TriggPos1,TSE=0,T_SMP_MS=50")

##############################################################################
############# Configure diagnostics:

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"

# go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)

iocInit

# Store Records to file
dbl > pvs.log
